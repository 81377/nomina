<?php
defined('BASEPATH') OR exit('No direct script access allowed');

class incidencia extends CI_Controller {

	public function construct(){
		$this->load->model('Incidencias');
		header('Access-Control-Allow-Origin: *');
		parent::__construct();
		if(isset($this->session->userdata['login'])){
			$logged = true;
		}
		else{
			$logged = false;
		}
	}
	
	public function index(){
		header('Access-Control-Allow-Origin: *');
				$data = []; 
				
		$this->load->model('Incidencias');
				if (isset($this->session->userdata['login'])) {
						$data['user'] = $this->session->userdata['login']['user'];
						
						if ($this->session->userdata['login']['exito']) {
				$this->load->view('header', $data);
				$this->load->view('IncidenciasView', $data);
				$this->load->view('footer', $data);
						} else {
								$this->load->view('login');
						}
				} else {
						$this->load->view('login');
		}		
	}

	public function MandaCorreo(){

		  //Cargamos la librerÃ­a email
		  $this->load->library('email');
		  /*
		   * Configuramos los parÃ¡metros para enviar el email,
		   * las siguientes configuraciones es recomendable
		   * hacerlas en el fichero email.php dentro del directorio config,
		   * en este caso para hacer un ejemplo rÃ¡pido lo hacemos
		   * en el propio controlador
		   */
		  //Indicamos el protocolo a utilizar
		   $config['protocol'] = 'smtp';         
		  
		   //El servidor de correo que utilizaremos
		   $config["smtp_host"] = 'mail.apparelinternational.com';
   
		  //Nuestro usuario
		   $config["smtp_user"] = 'josuederker2022@gmail.com';
			
		  //Nuestra contraseÃ±a
		   //$config["smtp_pass"] = '0110EM18';   
			
		  //El puerto que utilizarÃ¡ el servidor smtp
		   $config["smtp_port"] = '2525';
		   
		  //El juego de caracteres a utilizar
		   $config['charset'] = 'utf-8';
	
		  //Permitimos que se puedan cortar palabras
		   $config['wordwrap'] = TRUE;
			
		  //El email debe ser valido 
		  $config['validate'] = true;
		  
		   
		 //Establecemos esta configuraciÃ³n
		   $this->email->initialize($config);
	
		 //Ponemos la direcciÃ³n de correo que enviarÃ¡ el email y un nombre
		   $this->email->from('josuederker2022@gmail.com', 'SINDICATO');
			
		 /*
		  * Ponemos el o los destinatarios para los que va el email
		  * en este caso al ser un formulario de contacto te lo enviarÃ¡s a ti
		  * mismo
		  */
		  //ainvig4
		   $this->email->to('josuederker2022@gmail.com');
			
		 //Definimos el asunto del mensaje
		 //  $this->email->subject($this->input->post("holaaa!"));
   
		 $this->email->subject('RECIBO DE NOMINA SINDICAL');
			
		 //Definimos el mensaje a enviar
		   $this->email->message(
				  // "Email: ".$this->input->post("email").
				  // " Mensaje: ".$this->input->post("mensaje")
				  " TU RECIBO DE NOMINA"
				   );
				   
			//$this->email->attach('ReciboSindical.pdf');
		   /*
		   $this->email->subject('Â¡ALERTA! He hackeado tu computadora y te he robado informaciÃ³n.');
			
		 //Definimos el mensaje a enviar
		   $this->email->message(
				  // "Email: ".$this->input->post("email").
				  // " Mensaje: ".$this->input->post("mensaje")
				  "Â¡Tu computadora fue infectada con mi malware!

				  Su contraseÃ±a para este correo: oswaldo1
				  
				  Soy programador y hackeÃ© tu computadora hace 3 meses. SeguÃ­ guardando informaciÃ³n todo el tiempo, como: historial de navegaciÃ³n, grabaciones de pantalla, contactos, mensajes y mucho mÃ¡s.
				  
				  Ya querÃ­a olvidarte, pero hace poco vi algo interesante en tu escritorio. Estoy hablando del dÃ­a que visitaste un sitio porno. DecidÃ­ grabar video desde la cÃ¡mara web y el escritorio. Ahora tengo un video tuyo masturbÃ¡ndote. Sabes a lo que me refiero ðŸ˜‰
				  
				  Me conectÃ© a la cÃ¡mara web de forma remota y apaguÃ© el indicador para que no notara nada.
				  
				  Ya he anotado todos tus contactos de la libreta de direcciones. Todos los contactos de amigos, conocidos, familiares. Todo esto estarÃ¡ conmigo.
				  
				  Estoy listo para olvidarme de todo esto y dejar de acceder por completo a su computadora y correo electrÃ³nico. Garantizo que no enviarÃ© estos videos y eliminarÃ© todos los archivos con ellos.
				  DespuÃ©s de eso me irÃ© y ya no te molestarÃ©, pero para eso quiero tener $5,000 pesos en bitcoins en mi billetera.
				  Tienes 48 horas despuÃ©s de leer este correo electrÃ³nico. TodavÃ­a controlo tu correo electrÃ³nico y tu computadora, y sÃ© cuÃ¡ndo los abres y los lees.
				  
				  No intentes cambiar la contraseÃ±a de tu correo electrÃ³nico, todo estÃ¡ bajo control. No intentes contactarme y contestar esta carta. Te lo enviÃ© desde tu direcciÃ³n de correo electrÃ³nico. Echa un vistazo al remitente, verÃ¡s que tengo control total sobre tu correo electrÃ³nico y tu computadora.
				  
				  DirecciÃ³n de la billetera Bitcoin:
				  3K13Sb8u9Rcxqufa3vpwSHQ8HyLC1jwio5
				  
				  Si no sabe cÃ³mo comprar bitcoins, puede encontrar informaciÃ³n sobre cÃ³mo comprar bitcoins en lÃ­nea. Si necesitas ayuda, puedes leer varios artÃ­culos al respecto.
				  
				  https://localbitcoins.com/guides/how-to-buy-bitcoins
				  https://www.coinbase.com/comprar-bitcoin?locale=en
				  https://paxful.com/como-comprar-bitcoin
				  
				  Espero sus acciones. Si no necesita estos datos en lÃ­nea y con todos sus amigos, envÃ­e $ 500 a mi billetera lo antes posible. DespuÃ©s de eso, borrarÃ© todos los datos y desaparecerÃ© de tu vida.
				  
				  No te ofendas por mÃ­. Si pagas, no pasa nada.
				  
				  Â¡La prÃ³xima vez actualiza tu navegador antes de navegar por la web!
				   "
				   );
				   */
			
		   //Enviamos el email y si se produce bien o mal que avise con una flasdata
		   if($this->email->send()){
			   echo 'Email enviado correctamente';
		   }else{
			   echo 'No se a enviado el email';
		   }
	}
        
    public function concepto(){
        header('Access-Control-Allow-Origin: *');
          $this->load->model('Incidencias');
          $data = $this->Incidencias->consultaConceptos();
          echo json_encode($data);
	}

	public function consultaIncidencias(){
		header('Access-Control-Allow-Origin: *');
		$result = array('data' => array());
		$id = $this->input->post('id',true);
		$this->load->model('Incidencias');
		$data = $this->Incidencias->consultaIncidencias($id);
		echo json_encode($data);
	}


	public function empleado(){
		header('Access-Control-Allow-Origin: *');
		$result = array('data' => array());
		$id = $this->input->post('id',true);
		$this->load->model('Incidencias');
		$data = $this->Incidencias->consultaEmpleado($id);
		echo json_encode($data);
	}
      
	public function descripcionCorta(){
		header('Access-Control-Allow-Origin: *');
		$result = array('data' => array());
		$id = $this->input->post('id',true);
		$this->load->model('Incidencias');
		$data = $this->Incidencias->consultaDescripcionCorta($id);
		echo json_encode($data);
	}
	  

	public function ActualizarIncidencia(){
		header('Access-Control-Allow-Origin: *');
				$id= $this->input->post('id',true);
				$data = array(
				'concepto_id' 	=> $this->input->post('concepto_id',true),
				'fechaInicio' 	=> $this->input->post('fechaInicio',true),
				'fechaFin'		=> $this->input->post('fechaFin',true)
			);
				$this->load->model('Incidencias');
				//print_r($params);die();
				echo  $this->Incidencias->ActualizarIncidencia($id,$data);
	}
	public function GuardarIncidencia(){
		header('Access-Control-Allow-Origin: *');
		$this->load->model('Incidencias');
		$data =  array(
			'empleado_id' 	=> $this->input->post('empleado_id',true),
			'concepto_id' 	=> $this->input->post('concepto_id',true),
			'fechaInicio' 	=> $this->input->post('fechaInicio',true),
			'fechaFin'		=> $this->input->post('fechaFin',true),
			'estatus'		=> $this->input->post('estatus',true)
		);

		$dt['exito'] = $this->Incidencias->GuardarIncidencia($data);
		echo $dt['exito'];
	}	
	public function ActualizarHorariosEmpleado(){
		header('Access-Control-Allow-Origin: *');
		$id= $this->input->post('id',true);
		$data = array(
		'idhorario_lunes' 		=> $this->input->post('idhorarioLunes',true),
		'idhorario_martes' 		=> $this->input->post('idhorarioMartes',true),
		'idhorario_miercoles' => $this->input->post('idhorarioMiercoles',true),
		'idhorario_jueves'		=> $this->input->post('idhorarioJueves',true),
		'idhorario_viernes'		=> $this->input->post('idhorarioViernes',true),
		'idhorario_sabado'		=> $this->input->post('idhorarioSabado',true),
		'idhorario_domingo'		=> $this->input->post('idhorarioDomingo',true),
		'descripcion'					=> $this->input->post('descripcion',true),				
		'fechaAsignacion'			=> $this->input->post('fechaAsignacion',true),
		);
		$this->load->model('HorarioUsuario');
		//print_r($params);die();
		echo  $this->HorarioUsuario->ActualizarHorariosEmpleado($id,$data);
	}

	function AgregarHorariosEmpleado(){
		header('Access-Control-Allow-Origin: *');
		$this->load->model('HorarioUsuario');
			$data =  array(
				'empleado_id' 				=> $this->input->post('empleado_id',true),
				'idhorario_lunes' 		=> $this->input->post('idhorarioLunes',true),
				'idhorario_martes' 		=> $this->input->post('idhorarioMartes',true),
				'idhorario_miercoles'	=> $this->input->post('idhorarioMiercoles',true),
				'idhorario_jueves'		=> $this->input->post('idhorarioJueves',true),
				'idhorario_viernes'		=> $this->input->post('idhorarioViernes',true),
				'idhorario_sabado'		=> $this->input->post('idhorarioSabado',true),
				'idhorario_domingo'		=> $this->input->post('idhorarioDomingo',true),
				'idEstatus'						=> 1,			
				'descripcion'					=> $this->input->post('descripcion',true),				
				'fechaAsignacion'			=> $this->input->post('fechaAsignacion',true),
			);

			$dt['exito'] = $this->HorarioUsuario->AgregarHorariosEmpleado($data);
			echo $dt['exito'];
	}
   
    public function consultaHorario(){
		header('Access-Control-Allow-Origin: *');
		$empleado_id = $this->input->post('empleado_id',true);
		$idDia = $this->input->post('dia',true);
		$result = array('data' => array());
		$this->load->model('HorarioUsuario');
		$data = $this->HorarioUsuario->consultaHorario($empleado_id,$idDia);
		//DESDE JS se hacen los botones de editar y eliminar horariosUsuario.js
		echo json_encode($data);
	}

    public function consultaIncidenciaEditar(){
			header('Access-Control-Allow-Origin: *');
			$id = $this->input->post('id',true);
			$result = array('data' => array());
			$this->load->model('Incidencias');
			$data = $this->Incidencias->ConsultaIncidenciaEditar($id);
			//DESDE JS se hacen los botones de editar y eliminar horariosUsuario.js
			echo json_encode($data);
	}
		
	
    function delete() {
		header('Access-Control-Allow-Origin: *');

		$login=$this->session->userdata['login'];
		$id_user=$login['user']->id ;
		$fechaBaja=date('Y-m-d');
		$status=0;
		$id = $this->input->post('id');
		$data = [
		'estatus' 				=> $status,	
		'fechaBaja' 				=> $fechaBaja,	
		'usuarioBaja_id' 		    => $id_user
		];
		$this->load->model('Incidencias');
		echo $this->Incidencias->ActualizarIncidencia($id, $data);
	}
}